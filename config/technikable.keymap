/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include "helpers/keypos.h"

#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5
#define THUMBS LH0 LH1 LH2 RH0 RH1 RH2 RLH0


/* left-hand HRMs */
ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

/* right-hand HRMs */
ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick_tap_ms = <200>; };

/ {
    chosen { zmk,matrix_transform = &mit_transform; };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        lbkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 4>;
        };

        rbkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <7 8>;
        };

        quot {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <15 16>;
        };

        bsl {
            bindings = <&kp BACKSLASH>;
            key-positions = <19 20>;
        };

        nubs {
            bindings = <&kp NUBS>;
            key-positions = <27 28>;
            layers = <3>;
        };

        nuhs {
            bindings = <&kp NUHS>;
            key-positions = <31 32>;
            layers = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
&mt LEFT_GUI ESC  &kp Q  &kp W         &kp E         &kp R  &kp T          &kp Y  &kp U          &kp I          &kp O    &kp P     &kp BACKSPACE
&mt LCTRL TAB     &kp A  &kp S         &kp D         &kp F  &kp G          &kp H  &kp J          &kp K          &kp L    &kp SEMI  &mt RIGHT_ALT ENTER
&kp LEFT_SHIFT    &kp Z  &kp X         &kp C         &kp V  &kp B          &kp N  &kp M          &kp COMMA      &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                         &kp LEFT_ALT  &kp LEFT_GUI  &mo 1  &lt 3 SPACE    &mo 2  &kp RIGHT_GUI  &kp RIGHT_ALT
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
&trans  &trans  &kp LG(LS(LEFT))  &kp LG(UP)    &kp LG(LS(RIGHT))  &kp LC(EQUAL)    &kp HOME        &kp PG_DN  &kp PAGE_UP    &kp END        &trans  &kp DEL
&trans  &trans  &kp LG(LEFT)      &kp LG(DOWN)  &kp LG(RIGHT)      &kp LC(N0)       &kp LEFT_ARROW  &kp DOWN   &kp UP_ARROW   &kp RIGHT      &trans  &trans
&trans  &trans  &kp LC(X)         &kp LC(C)     &kp LC(V)          &kp LC(MINUS)    &kp LC(LEFT)    &trans     &kp LG(LS(S))  &kp LC(RIGHT)  &trans  &trans
                &trans            &trans        &trans             &trans           &trans          &trans     &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
&kp F1     &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7        &kp F8        &kp F9        &kp F10               &kp F11                &kp F12
&kp PLUS   &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR    &kp PERCENT     &kp CARET     &kp AMPS      &kp ASTRK     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER
&kp EQUAL  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0           &kp MINUS
                         &kp GRAVE     &trans        &trans        &trans          &trans        &trans        &kp TILDE
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &kp C_MUTE           &kp C_PREVIOUS    &trans  &trans  &trans  &trans  &trans
&out OUT_TOG  &trans        &trans        &trans        &trans        &kp C_VOLUME_UP      &kp C_PLAY_PAUSE  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &kp C_VOLUME_DOWN    &kp C_NEXT        &trans  &trans  &trans  &trans  &trans
                            &trans        &trans        &trans        &trans               &trans            &trans  &trans
            >;
        };
    };
};
